
- name: Installing Python3
  ansible.builtin.yum: 
    name: 
      - python36
      - gcc
      - python3-devel
    state: installed 

- name: Creating application user
  ansible.builtin.include_role:
    name: common 
    tasks_from: create-user

- name:  Download and extract {{COMPONENT}}
  ansible.builtin.include_role:
    name: common 
    tasks_from: download 

- name: Deleting Old Content
  ansible.builtin.file:
    path: /home/roboshop/{{COMPONENT}}
    state: absent  

- name: Copy file to destination 
  ansible.builtin.copy:
    src:  /tmp/{{COMPONENT}}-main/
    dest: /home/roboshop/{{COMPONENT}}/
    remote_src: yes
  become_user: roboshop 

- name: Installing dependencies
  ansible.builtin.pip:
    requirements: /home/roboshop/{{COMPONENT}}/requirements.txt
    executable: pip3

- name: Updating the User ID 
  ansible.builtin.lineinfile:
    path:  /home/roboshop/{{COMPONENT}}/{{COMPONENT}}.ini
    regexp: '^uid'
    line: uid = {{APP_USER_INFO.uid}}

- name: Updating the Group ID 
  ansible.builtin.lineinfile:
    path:  /home/roboshop/{{COMPONENT}}/{{COMPONENT}}.ini
    regexp: '^gid'
    line: gid = {{APP_USER_INFO.group}}

- name: Configuring the service 
  ansible.builtin.include_role:
    name: common
    tasks_from: config-service 

- name: Doing set-hostname 
  ansible.builtin.include_role:
    name: common
    tasks_from: set-hostname
# 1. Install Python 3

# ```sql
# # yum install python36 gcc python3-devel -y
# ```

# 1. Create a user for running the application

# ```sql
# # useradd roboshop
# ```

# 1. Download the repo.

# ```sql
# $ cd /home/roboshop
# $ curl -L -s -o /tmp/payment.zip "https://github.com/stans-robot-project/payment/archive/main.zip"
# $ unzip /tmp/payment.zip
# $ mv payment-main payment
# ```

# 1. Install the dependencies

# ```bash
# # cd /home/roboshop/payment 
# # pip3 install -r requirements.txt
# ```

# ### **Note: Above command may fail with permission denied, So run as root user**

# 1. Update the `roboshop` user id and group id in `payment.ini` file .

# ```sql
# # id roboshop 
# (Copy uid and gid of the user which needs to be updated in the payment.ini file )
# ```

# 1. Update SystemD service file with `CART` , `USER` , `RABBITMQ` Server IP Address.

# ```sql
# # vim systemd.service
# ```

# Update `CARTHOST` with cart server ip

# Update `USERHOST` with user server ip 

# Update `AMQPHOST` with RabbitMQ server ip.

# 1. Setup the service

# ```sql
# # mv /home/roboshop/payment/systemd.service /etc/systemd/system/payment.service
# # systemctl daemon-reload
# # systemctl enable payment 
# # systemctl start payment
# # systemctl status payment -l
# ```

# 1. Now we are good with payment. Update the `PAYMENT` server IP ADDRESS in the FRONTEND Reverse Proxy File